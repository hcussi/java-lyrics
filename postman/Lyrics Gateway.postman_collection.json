{
	"info": {
		"_postman_id": "af4cea4a-b126-4c27-9577-e76172de9075",
		"name": "Lyrics Gateway",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32896554"
	},
	"item": [
		{
			"name": "get actuator routes",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/actuator/gateway/routes",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"actuator",
						"gateway",
						"routes"
					]
				}
			},
			"response": []
		},
		{
			"name": "get actuator health",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/actuator/health",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"actuator",
						"health"
					]
				}
			},
			"response": []
		},
		{
			"name": "get actuator info",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/actuator/info",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"actuator",
						"info"
					]
				}
			},
			"response": []
		},
		{
			"name": "get actuator prometheus",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/actuator/prometheus",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"actuator",
						"prometheus"
					]
				}
			},
			"response": []
		},
		{
			"name": "get actuator circuitbreakers",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/actuator/circuitbreakers",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"actuator",
						"circuitbreakers"
					]
				}
			},
			"response": []
		},
		{
			"name": "get actuator circuitbreakerevents",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/actuator/circuitbreakerevents",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"actuator",
						"circuitbreakerevents"
					]
				}
			},
			"response": []
		},
		{
			"name": "get actuator retries",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/actuator/retries",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"actuator",
						"retries"
					]
				}
			},
			"response": []
		},
		{
			"name": "get actuator retryevents",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/actuator/retryevents",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"actuator",
						"retryevents"
					]
				}
			},
			"response": []
		},
		{
			"name": "get users",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "get user",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/users/65f277a8477dc13e6ae6e707",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"users",
						"65f277a8477dc13e6ae6e707"
					]
				}
			},
			"response": []
		},
		{
			"name": "update user",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"test\",\n    \"password\": \"12345678\",\n    \"email\": \"test@gmail.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/users/65f277a8477dc13e6ae6e707",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"users",
						"65f277a8477dc13e6ae6e707"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete user",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"test\",\n    \"password\": \"12345678\",\n    \"email\": \"test@gmail.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/users/65f4af2ff613fe5df0c25e78",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"users",
						"65f4af2ff613fe5df0c25e78"
					]
				}
			},
			"response": []
		},
		{
			"name": "register",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"test\",\n    \"password\": \"12345678\",\n    \"email\": \"test@gmail.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/register",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "get suggest",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/lyrics/suggest?term=back in black",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"lyrics",
						"suggest"
					],
					"query": [
						{
							"key": "term",
							"value": "back in black"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get suggest token",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{JWT_TOKEN}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/lyrics/suggest?term=back in black&token=aHR0cHM6Ly9hcGkuZGVlemVyLmNvbS9zZWFyY2g/cT1iYWNrJTIwaW4lMjBibGFjayZpbmRleD0yNQ==",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"lyrics",
						"suggest"
					],
					"query": [
						{
							"key": "term",
							"value": "back in black"
						},
						{
							"key": "token",
							"value": "aHR0cHM6Ly9hcGkuZGVlemVyLmNvbS9zZWFyY2g/cT1iYWNrJTIwaW4lMjBibGFjayZpbmRleD0yNQ=="
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "authentication",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"test8@gmail.com\",\n    \"password\": \"12345678\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/authentication",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"authentication"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "JWT_TOKEN",
			"value": "",
			"type": "string"
		}
	]
}