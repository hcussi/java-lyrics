plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
}
ext {
	javaVersion = '21'
	dotEnvVersion = '4.0.0'
	docApiVersion = '2.3.0'
	mongoVersion = '3.2.3'
	springCloudVersion = '2023.0.0'
}

allprojects {
	group = 'com.hernancussi.lyrics'
	version = '0.0.1-SNAPSHOT'

	java {
		sourceCompatibility = "${javaVersion}"
		targetCompatibility = "${javaVersion}"
	}

	repositories {
		mavenCentral()
	}
}

subprojects {
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'java'

	compileJava {
		options.compilerArgs << '-parameters'
	}
	compileTestJava {
		options.compilerArgs << '-parameters'
	}

	repositories {
		mavenCentral()
	}

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	dependencyManagement {
		imports {
			mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
			mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
		}
	}

	dependencies {
		// Dotenv
		implementation "me.paulschwarz:spring-dotenv:$dotEnvVersion"

		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'

		testImplementation 'org.springframework.boot:spring-boot-starter-test'
	}

	test {
		useJUnitPlatform()
	}

	springBoot {
		buildInfo()
	}

	tasks.withType(JavaCompile) {
		configure(options) {
			options.compilerArgs << '--enable-preview' << '-Xlint:preview'
		}
	}

	tasks.withType(Test) {
		jvmArgs += "--enable-preview"
	}

	tasks.withType(JavaExec) {
		jvmArgs += '--enable-preview'
	}

	bootJar {
		enabled = true
	}

}

bootJar {
	enabled = false
}
